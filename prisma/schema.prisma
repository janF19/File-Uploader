// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  files     File[]
  folders   Folder[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model File {
  id        Int      @id @default(autoincrement())
  filename  String
  path      String
  mimetype  String
  size      Int
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  folderId  Int?
  folder    Folder?  @relation(fields: [folderId], references: [id])
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model Folder {
  id           Int           @id @default(autoincrement())
  name         String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  userId       Int
  user         User          @relation(fields: [userId], references: [id])
  files        File[]
  sharedFolder SharedFolder[] // Add this line to establish the relation
}

model SharedFolder {
  id          String    @id @default(uuid())
  folderId    Int       // Change this to Int to match Folder.id type
  folder      Folder    @relation(fields: [folderId], references: [id])
  createdAt   DateTime  @default(now())
  expiresAt   DateTime
  accessToken String    @unique
}